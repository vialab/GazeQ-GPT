import { useEffect } from "react";
import * as React from "react";
import * as d3 from "d3";
import "../assets/css/Header.css";

export default function Header({ children }) {
    useEffect(() => {
        let path1 = "M 493.75 95.3125 C 493.75 120.2875 459.8125 139.3844 394.375 151.8719 C 358.0938 158.8187 305.5938 165.625 259.375 165.625 C 178.4688 165.625 125.875 161.7719 83.7813 143.125 C 58.4688 131.875 25 109.9375 25 95.3125 C 25 76.0469 41.5 55.7687 83.3125 43.0563 S 194.125 25 259.375 25 C 348.4375 25 416.5938 39.9063 456.25 61.8719 C 473.875 71.8 493.75 83.1906 493.75 95.3125 Z";
        let path2 = "M 514 101.5 C 506.5 125.8 448 140.2 409 151 C 341.5 170.8 296.5 167.65 245.5 164.05 C 167.5 157.75 169 157.3 112 144.7 C 61 131.65 49 125.8 41.5 103.3 C 32.5 80.8 31 56.05 85 39.4 S 181 23.2 271 24.1 C 359.5 24.55 421 36.7 464.5 49.3 C 512.5 65.05 503.5 73.6 512.5 87.55 Z";
        let path3 = "M 481 102.4 C 460 133 433 137.05 386.5 148.75 C 314.5 169 311.5 165.85 250 169.9 C 167.5 169.45 139 170.35 77.5 153.7 C 31 131.2 40 130.75 31 104.65 C 32.5 80.8 59.5 59.2 118 42.1 S 202 24.1 314.5 19.15 C 410.5 17.8 445 32.2 464.5 49.3 C 482.5 69.1 485.5 68.2 485.5 86.2 Z";
        let path = d3.select(".background").select("path");

        d3.select(".background")
        .on("mouseenter", () => {
            d3.select(".graphic")
            .transition()
            .attrTween("transform", () => {
                return d3.interpolate(d3.select(".graphic").attr("transform"), "scale(1.05)");
            });

            function animate() {
                path
                .transition()
                .duration(1000)
                .ease(d3.easeLinear)
                .attrTween("d", () => {
                    return d3.interpolate(path.attr("d"), path2);
                })
                .on("end", () => {
                    path
                    .transition()
                    .duration(1000)
                    .ease(d3.easeLinear)
                    .attrTween("d", () => {
                        return d3.interpolate(path2, path3);
                    }).on("end", () => {
                        path
                        .transition()
                        .duration(1000)
                        .ease(d3.easeLinear)
                        .attrTween("d", () => {
                            return d3.interpolate(path3, path1);
                        }).on("end", () => {
                            animate();
                        })
                    })
                });
            }
            animate();
        })
        .on("mouseleave", () => {
            path
            .transition()
            .duration(1000)
            .attrTween("d", () => {
                return d3.interpolate(path.attr("d"), path1);
            })

            d3.select(".graphic")
            .transition()
            .attrTween("transform", () => {
                return d3.interpolate(d3.select(".graphic").attr("transform"), "scale(1)");
            });
        });

        return () => {
            d3.select(".background").on("mouseenter mouseleave", null);
        }
    }, []);
    
    return (
        <header id={"header"}>
            <svg 
                viewBox="0 0 512.5 200"
                className={"svg"}
            >
                <g className="background" fill="#003e6b" style={{ pointerEvents: "all" }}>
                    <path d="M 493.75 95.3125 C 493.75 120.2875 459.8125 139.3844 394.375 151.8719 C 358.0938 158.8187 305.5938 165.625 259.375 165.625 C 178.4688 165.625 125.875 161.7719 83.7813 143.125 C 58.4688 131.875 25 109.9375 25 95.3125 C 25 76.0469 41.5 55.7687 83.3125 43.0563 S 194.125 25 259.375 25 C 348.4375 25 416.5938 39.9063 456.25 61.8719 C 473.875 71.8 493.75 83.1906 493.75 95.3125 Z"></path>
                </g>
                <g className={"graphic"}>
                    <g fill="#acd2ea">
                        <path d="M 127.1994 49.2 C 100.6897 49.2 79.2 70.6897 79.2 97.1994 C 79.2 112.3268 86.2052 125.8114 97.1404 134.6098 L 79.2 145.2001 H 127.1994 C 153.7091 145.2001 175.2 123.7104 175.2 97.1995 C 175.2 70.6898 153.7066 49.2001 127.1994 49.2001 Z M 127.1982 140.929 H 95.1305 L 105.2812 135.0347 C 92.2438 127.4642 83.47 113.3615 83.47 97.1995 C 83.47 73.0483 103.0471 53.4713 127.1982 53.4713 C 151.3494 53.4713 170.9278 73.0484 170.9278 97.1995 C 170.9278 121.3495 151.3494 140.9291 127.1982 140.9291 Z M 153.352 97.1994 L 140.2763 109.009 C 133.0531 115.5326 121.3445 115.5326 114.1225 109.009 L 101.0468 97.1994 L 114.1225 85.3898 C 121.3445 78.8687 133.053 78.8687 140.2763 85.3898 L 153.352 97.1994 Z M 137.2614 88.1116 C 131.7046 83.0929 122.6944 83.0929 117.1375 88.1116 C 111.5795 93.1302 111.5795 101.2685 117.1375 106.2871 C 122.6944 111.3058 131.7058 111.3058 137.2614 106.2871 C 142.8208 101.2673 142.8208 93.1302 137.2614 88.1116 Z M 134.9719 97.1994 C 134.9719 101.4926 131.4928 104.9694 127.1994 104.9694 C 122.9062 104.9694 119.4269 101.4926 119.4269 97.1994 C 119.4269 92.9062 122.906 89.4282 127.1994 89.4282 S 134.9719 92.9062 134.9719 97.1994 Z M 131.3966 93.8076 C 131.3966 93.3236 131.2218 92.8852 130.9422 92.5354 C 130.8289 92.8901 130.5025 93.1487 130.1084 93.1487 C 129.6245 93.1487 129.2316 92.7558 129.2316 92.2718 C 129.2316 92.0846 129.2932 91.911 129.3929 91.7669 C 129.3781 91.7669 129.3658 91.7632 129.351 91.7632 C 128.2217 91.7632 127.3054 92.6795 127.3054 93.8088 C 127.3054 94.9381 128.2217 95.8556 129.351 95.8556 C 130.4816 95.8544 131.3966 94.9381 131.3966 93.8075 Z"></path>
                    </g>

                    <g fill="#ffffff" transform="translate(210 50) scale(0.8 0.8)">
                        <path d="M213.483 53.04L196.459 30.512L202.923 26.096L219.755 48.432L213.483 53.04ZM199.531 46.64C196.331 46.64 193.366 46.064 190.635 44.912C187.905 43.76 185.515 42.16 183.467 40.112C181.462 38.0213 179.905 35.568 178.795 32.752C177.686 29.936 177.131 26.864 177.131 23.536C177.131 20.208 177.686 17.136 178.795 14.32C179.905 11.504 181.462 9.07201 183.467 7.02401C185.515 4.93334 187.905 3.312 190.635 2.16C193.366 1.00801 196.331 0.432007 199.531 0.432007C202.774 0.432007 205.761 1.00801 208.491 2.16C211.222 3.312 213.59 4.93334 215.595 7.02401C217.601 9.11467 219.158 11.568 220.267 14.384C221.377 17.1573 221.931 20.208 221.931 23.536C221.931 26.8213 221.377 29.872 220.267 32.688C219.158 35.504 217.601 37.9573 215.595 40.048C213.59 42.1387 211.222 43.76 208.491 44.912C205.761 46.064 202.774 46.64 199.531 46.64ZM199.531 38.704C201.579 38.704 203.435 38.3413 205.099 37.616C206.806 36.848 208.278 35.7813 209.515 34.416C210.753 33.008 211.713 31.3867 212.395 29.552C213.121 27.7173 213.483 25.712 213.483 23.536C213.483 21.36 213.121 19.3547 212.395 17.52C211.713 15.6853 210.753 14.0853 209.515 12.72C208.278 11.312 206.806 10.2453 205.099 9.52C203.435 8.75201 201.579 8.36801 199.531 8.36801C197.526 8.36801 195.67 8.75201 193.963 9.52C192.257 10.2453 190.785 11.2907 189.547 12.656C188.31 14.0213 187.35 15.6213 186.667 17.456C185.985 19.2907 185.643 21.3173 185.643 23.536C185.643 25.712 185.985 27.7387 186.667 29.616C187.35 31.4507 188.31 33.0507 189.547 34.416C190.785 35.7813 192.257 36.848 193.963 37.616C195.67 38.3413 197.526 38.704 199.531 38.704Z" />
                        <path d="M140.203 46V1.2H169.515V8.752H148.395V38.448H169.771V46H140.203ZM144.043 26.8V19.376H166.251V26.8H144.043Z" />
                        <path d="M95.2775 46V40.176L120.301 6.768L122.285 9.008H96.9415V1.2H129.901V6.96L105.005 40.432L102.957 38.32H130.605V46H95.2775Z" />
                        <path d="M47.774 46L65.246 1.2H73.054L90.398 46H81.758L72.158 20.528C71.9447 20.016 71.646 19.2053 71.262 18.096C70.9207 16.9867 70.5367 15.792 70.11 14.512C69.6833 13.1893 69.2993 11.9733 68.958 10.864C68.6167 9.712 68.3607 8.88 68.19 8.368L69.79 8.304C69.534 9.15733 69.2353 10.1173 68.894 11.184C68.5527 12.2507 68.19 13.36 67.806 14.512C67.422 15.664 67.038 16.7733 66.654 17.84C66.3127 18.9067 65.9927 19.8667 65.694 20.72L56.094 46H47.774ZM55.71 35.76L58.59 28.528H79.006L82.078 35.76H55.71Z" />
                        <path d="M24.368 46.64C20.9973 46.64 17.8826 46.064 15.024 44.912C12.1653 43.7173 9.6693 42.0747 7.53597 39.984C5.4453 37.8933 3.82397 35.4613 2.67197 32.688C1.51997 29.872 0.94397 26.8213 0.94397 23.536C0.94397 20.2933 1.51997 17.2853 2.67197 14.512C3.86664 11.696 5.53064 9.26399 7.66397 7.216C9.7973 5.12533 12.2933 3.50399 15.152 2.35199C18.0533 1.19999 21.168 0.623993 24.496 0.623993C26.8426 0.623993 29.104 0.943994 31.28 1.584C33.456 2.224 35.4186 3.12 37.168 4.272C38.9173 5.424 40.368 6.72533 41.52 8.17599L36.272 13.68C35.0773 12.528 33.84 11.568 32.56 10.8C31.3226 10.032 30.0213 9.43466 28.656 9.008C27.2906 8.58133 25.8826 8.368 24.432 8.368C22.2986 8.368 20.3146 8.752 18.48 9.51999C16.688 10.288 15.1093 11.3547 13.744 12.72C12.4213 14.0853 11.376 15.6853 10.608 17.52C9.83997 19.3547 9.45597 21.36 9.45597 23.536C9.45597 25.6267 9.83997 27.6107 10.608 29.488C11.4186 31.3653 12.528 33.008 13.936 34.416C15.344 35.824 16.9653 36.9333 18.8 37.744C20.6773 38.512 22.6613 38.896 24.752 38.896C26.3306 38.896 27.8026 38.6613 29.168 38.192C30.5333 37.7227 31.7493 37.0827 32.816 36.272C33.8826 35.4187 34.6933 34.4373 35.248 33.328C35.8453 32.2187 36.144 31.024 36.144 29.744V28.336L37.296 29.68H24.048V22.256H44.336C44.4213 22.7253 44.4853 23.2587 44.528 23.856C44.5706 24.4107 44.592 24.9653 44.592 25.52C44.6346 26.032 44.656 26.48 44.656 26.864C44.656 29.808 44.144 32.496 43.12 34.928C42.096 37.3173 40.6453 39.3867 38.768 41.136C36.9333 42.8853 34.7786 44.2507 32.304 45.232C29.872 46.1707 27.2266 46.64 24.368 46.64Z" />
                    </g>

                    <g fill="#f27023" transform="translate(-70 100) scale(1.1 1.1)">
                        <path d="M356.914 46V8.88H344.113V1.2H378.418V8.88H365.233V46H356.914Z"/>
                        <path d="M306.766 46V1.2H325.39C327.95 1.2 330.254 1.81866 332.302 3.056C334.393 4.29333 336.057 5.97867 337.294 8.112C338.531 10.2453 339.15 12.6347 339.15 15.28C339.15 17.968 338.531 20.4 337.294 22.576C336.057 24.7093 334.393 26.416 332.302 27.696C330.254 28.976 327.95 29.616 325.39 29.616H315.086V46H306.766ZM315.086 21.936H324.814C325.881 21.936 326.841 21.6373 327.694 21.04C328.59 20.4427 329.294 19.6533 329.806 18.672C330.361 17.6907 330.638 16.5813 330.638 15.344C330.638 14.1067 330.361 13.0187 329.806 12.08C329.294 11.0987 328.59 10.3307 327.694 9.776C326.841 9.17866 325.881 8.88 324.814 8.88H315.086V21.936Z" />
                        <path d="M277.743 46.64C274.372 46.64 271.258 46.064 268.399 44.912C265.54 43.7173 263.044 42.0747 260.911 39.984C258.82 37.8933 257.199 35.4613 256.047 32.688C254.895 29.872 254.319 26.8213 254.319 23.536C254.319 20.2933 254.895 17.2853 256.047 14.512C257.242 11.696 258.906 9.26399 261.039 7.216C263.172 5.12533 265.668 3.50399 268.527 2.35199C271.428 1.19999 274.543 0.623993 277.871 0.623993C280.218 0.623993 282.479 0.943994 284.655 1.584C286.831 2.224 288.794 3.12 290.543 4.272C292.292 5.424 293.743 6.72533 294.895 8.17599L289.647 13.68C288.452 12.528 287.215 11.568 285.935 10.8C284.698 10.032 283.396 9.43466 282.031 9.008C280.666 8.58133 279.258 8.368 277.807 8.368C275.674 8.368 273.69 8.752 271.855 9.51999C270.063 10.288 268.484 11.3547 267.119 12.72C265.796 14.0853 264.751 15.6853 263.983 17.52C263.215 19.3547 262.831 21.36 262.831 23.536C262.831 25.6267 263.215 27.6107 263.983 29.488C264.794 31.3653 265.903 33.008 267.311 34.416C268.719 35.824 270.34 36.9333 272.175 37.744C274.052 38.512 276.036 38.896 278.127 38.896C279.706 38.896 281.178 38.6613 282.543 38.192C283.908 37.7227 285.124 37.0827 286.191 36.272C287.258 35.4187 288.068 34.4373 288.623 33.328C289.22 32.2187 289.519 31.024 289.519 29.744V28.336L290.671 29.68H277.423V22.256H297.711C297.796 22.7253 297.86 23.2587 297.903 23.856C297.946 24.4107 297.967 24.9653 297.967 25.52C298.01 26.032 298.031 26.48 298.031 26.864C298.031 29.808 297.519 32.496 296.495 34.928C295.471 37.3173 294.02 39.3867 292.143 41.136C290.308 42.8853 288.154 44.2507 285.679 45.232C283.247 46.1707 280.602 46.64 277.743 46.64Z" />
                    </g>
                </g>
            </svg>
            { 
                children instanceof Array ? children.map((child, index) => {
                    return React.cloneElement(child, { className: "headerlinks", key: index });
                }) : 
                React.cloneElement(children, { className: "headerlinks" })
            }
        </header>
    )
}